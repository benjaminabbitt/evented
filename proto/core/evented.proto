syntax = "proto3";
package evented.core;

import "google/protobuf/any.proto";

message Cover {
    string domain = 2;
    string root = 1;
}

message EventPage {
    uint32 sequence = 1;
    string createdAt = 2;
    google.protobuf.Any Event = 3;
    bool synchronous = 4;
}

message Snapshot {
    uint32 sequence = 2;
    google.protobuf.Any state = 3;
}

message EventBook {
    Cover cover = 1;
    repeated EventPage pages = 2;
    Snapshot snapshot = 3;
}

message Projection {
    Cover cover = 1;
    string projector = 2;
    uint32 sequence = 3;
    google.protobuf.Any projection = 4;
}

message CommandHandlerResponse {
    repeated EventBook books = 1;
    repeated Projection projections = 3;
}


message CommandPage {
    uint32 sequence = 1;
    bool synchronous = 2;
    google.protobuf.Any command = 3;
}

message CommandBook {
    Cover cover = 1;
    repeated CommandPage pages = 2;
}


message ContextualCommand {
    EventBook events = 1;
    CommandBook command = 2;
}


service CommandHandler {
    rpc Handle (CommandBook) returns (CommandHandlerResponse){}
    rpc Record (EventBook) returns (CommandHandlerResponse){}
}
