syntax = "proto3";
package evented.core;
option go_package = "github.com/benjaminabbitt/evented/proto/evented/core";
option java_package = "name.benjaminabbitt.evented.core";

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";

message UUID {
    bytes value = 1;
}

message Cover {
    string domain = 2;
    UUID root = 1;
}

message EventPage {
    oneof sequence {
        uint32 num = 1;
        bool force = 2;
    }
    google.protobuf.Timestamp createdAt = 3;
    google.protobuf.Any Event = 4;
    bool synchronous = 5;
}

message Snapshot {
    uint32 sequence = 2;
    google.protobuf.Any state = 3;
}

message EventBook {
    Cover cover = 1;
    Snapshot snapshot = 2;
    repeated EventPage pages = 3;
}

message Projection {
    Cover cover = 1;
    string projector = 2;
    uint32 sequence = 3;
    google.protobuf.Any projection = 4;
}

message SynchronousProcessingResponse {
    repeated EventBook books = 1;
    repeated Projection projections = 3;
}

message CommandPage {
    uint32 sequence = 1;
    bool synchronous = 2;
    google.protobuf.Any command = 3;
}

message CommandBook {
    Cover cover = 1;
    repeated CommandPage pages = 2;
}

message ContextualCommand {
    // Passed from command handler to business, consists of everything that the business needs to execute/evaluate the command
    EventBook events = 1;
    CommandBook command = 2;
}

//message HealthCheckRequest {
//    string service = 1;
//}
//
//message HealthCheckResponse {
//    enum ServingStatus {
//        UNKNOWN = 0;
//        SERVING = 1;
//        NOT_SERVING = 2;
//    }
//    ServingStatus status = 1;
//}
//
//service Health {
//    rpc Check (HealthCheckRequest) returns (HealthCheckResponse);
//
//    rpc Watch (HealthCheckRequest) returns (stream HealthCheckResponse);
//}