# Default values for commandHandler.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# TODO: add validation
# domain and name are used to create DNS-1123 subdomains, so must consist only of [a-z, -, .].  Regex is [a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*
domain: testdomain
name: testname

commandhandler:
  image:
    image: "evented-commandhandler"
    tag: latest
    pullPolicy: IfNotPresent
  grpc:
    port: 1747
  probes:
    liveness:
      initialDelaySeconds: 10
    readiness:
      initialDelaySeconds: 5

businesslogic:
  image:
    image: "business_logic_image_name"
    tag: latest
    pullPolicy: IfNotPresent
  grpc:
    port: 1747
  probes:
    liveness:
      initialDelaySeconds: 10
    readiness:
      initialDelaySeconds: 5

imagePullSecrets: [ ]
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: { }

podSecurityContext: { }
# fsGroup: 2000

securityContext: { }
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 1747

ingress:
  enabled: true
  annotations: { }
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: localhost
      paths: [ "/" ]
  tls: [ ]
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: { }
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

replicaCount: 1
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: { }

tolerations: [ ]

affinity: { }

bootstrap:
  consul:
    host: consul.service.consul:8500
#    key: test

defaults:
  commandHandlerName: ch
  businessLogicName: bl