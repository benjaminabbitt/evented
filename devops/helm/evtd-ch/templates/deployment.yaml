apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "commandHandler.fullname" . }}
  labels:
  {{- include "commandHandler.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
  {{- include "commandHandler.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
    {{- include "commandHandler.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "commandHandler.serviceAccountName" . }}
      securityContext:
      {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{(printf "%s-%s-%s" .Values.domain .Values.name .Values.defaults.commandHandlerName)}}
          securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.commandhandler.image.image }}:{{ .Values.commandhandler.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.commandhandler.image.pullPolicy }}
          ports:
            - name: evented
              containerPort: {{.Values.commandhandler.grpc.port}}
              protocol: TCP
          env:
            - name: CONSUL_HOST
              value: {{ .Values.bootstrap.consul.host }}
            - name: CONSUL_KEY
              value: {{ .Values.bootstrap.consul.key | default (printf "%s-%s" .Values.domain .Values.name) }}
            - name: APP_NAME
              value: {{ (printf "%s-%s" .Values.domain .Values.name)}}
          readinessProbe:
            initialDelaySeconds: {{ .Values.commandhandler.probes.readiness.initialDelaySeconds }}
            exec:
              command: [ "/bin/grpc_health_probe", "-addr=:{{ .Values.commandhandler.grpc.port }}" ]
          livenessProbe:
            exec:
              command: [ "/bin/grpc_health_probe", "-addr=:{{ .Values.commandhandler.grpc.port }}" ]
            initialDelaySeconds: {{ .Values.commandhandler.probes.liveness.initialDelaySeconds }}
          resources:
        {{- toYaml .Values.resources | nindent 12 }}
        - name: {{ (printf "%s-%s-%s" .Values.domain .Values.name .Values.defaults.businessLogicName)}}
          imagePullPolicy: {{.Values.businesslogic.image.pullPolicy}}
          image: {{ (printf "%s:%s" .Values.businesslogic.image.image .Values.businesslogic.image.tag) }}
          env:
            - name: CONSUL_HOST
              value: {{ .Values.bootstrap.consul.host}}
            - name: CONSUL_KEY
              value: {{ .Values.bootstrap.consul.key | default (printf "%s-%s" .Values.domain .Values.name) }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
  {{- toYaml . | nindent 8 }}
  {{- end }}
